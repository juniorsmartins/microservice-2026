plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.9.1" // Add para Avro
//    id 'org.liquibase.gradle' version '3.0.2'
}

group = 'backend.finance'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(25)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/" // Add para Avro/acessar dependências da Confluent
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

	implementation 'org.springframework.kafka:spring-kafka'
    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '8.0.0' //  Fornece a serialização e desserialização de mensagens Avro para o Kafka, permitindo enviar e receber dados codificados em Avro nos tópicos do Kafka.
    implementation group: 'io.confluent', name: 'kafka-schema-registry-client', version: '8.0.0' // Permite que sua aplicação interaja com o Schema Registry da Confluent, que gerencia os esquemas Avro, garantindo compatibilidade e evolução dos esquemas ao produzir ou consumir mensagens.
    implementation group: 'org.apache.avro', name: 'avro', version: '1.12.0' // Utilizada para trabalhar com esquemas Avro e serializar/desserializar mensagens.
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation group: 'io.confluent', name: 'kafka-schema-registry', version: '8.0.0' // Necessário para mockar schema registry nos testes

	compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

avro {
    createSetters = true // Gera métodos setters nos POJOs gerados a partir do Avro.
    fieldVisibility = "PRIVATE" // Define que os campos das classes geradas serão privados.
    outputCharacterEncoding = "UTF-8"
}

tasks.named('test') {
	useJUnitPlatform()
}


